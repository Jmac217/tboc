::For monday's demonstration::

1.) Fix page orientations, whether this has to be done in-line, or the classes get structured, it has to get done.
		-- locations.php is still inline

2.) Make .load_link work for loading in new tabs or the same page, because they will need to see that it can be modified if necessary.

3.) Get #outgoing box set up with external links though means of .load_link, this will mean adding onto .load_link and breaking down its CSS into modular chunks. Also Javascript will have to be injected, so a functions.js will need to be added and it's a real possibility that there will need to be an outgoing.php page included to be loaded by .load_link.

~~~~~~~~~~~~~~~~~~~~~

What to do next

#pages probably shouldn't overflow

for the outgoing links js load_link functionality will have to be broken out and split, right now it's coupled to li elements. Security Center is where that was being tested, old links are only commented out.

bug in notice() - top animation is set for old links location (below banner)

pages are hacked together with in-line styling, which is fine for the demonstration, but will will need to be broken down into classes: .page_header, .page_photo, .page_panel (for multiple sections), .page_body (for single sections), .page_paragraph (to replace .job_opening)

revisit the load_link function and prepare all pages to load correctly, whether it be in the #pages div or in another tab. The new window thing doesn't exactly matter
- this means the load() function will need to be finished, probably first.
- for now all pages except for external links will load into the front page

Testing email sendings will require the existing mail() functions to be commented and replaced by one with either mine or Tom's email address, mine for now.

The css structure of the Security Center is not coordinated well with the rest of the index, which is not important for the demonstration but will need to be reassessed.

============================================================================================================

Some global variables need to be set up including: paths/JSON, credintials/prefs, navigational array w/ logic

A simple JSON template has been created, this needs to replace XML and be expanded upon. Add links.json and navigation.json

linked pages need rewritten to load links into the pages div. Outside.php could use a jQueryUI window to check user permission.
- will any pages need reloaded? That is one concern I have when doing things in this manner.
- in this case will there be the need for the dynamic nav links?

Pages div should probably be animated into existence with the first link that is selected. This will be necessary for quick viewing of the footer. Some people need to see the footer I guess.

Those png headers are going to need removed.. That's just unnecessary; Add a @font-face to the CSS and call on a fancy font instead. 
- working example of png header is in "privacy policy".

selection_handler is currently being implemented, it takes a series of parameters to determine how to handle links.
- It should query a JSON database of link locations > #ID => JSON -> #ID -> {type:'link',path:'/pages/',load:'this',name:'class'}

Expand the warning: There needs to be a div placed above the links to allow dynamic seasonal or situational content. This will be loaded in as a php module. 
- There could be an offline control panel located on our intranet for this.
-- If that's the case things could get much more interesting. This is something I'd really like to see.
